# $FreeBSD$
#
# Hyper-V specific events

notify 10 {
	match "system"		"DEVFS";
	match "subsystem"	"CDEV";
	match "type"		"CREATE";
	match "cdev"		"hv_kvp_dev";
	action "/usr/sbin/hv_kvp_daemon";
};

notify 10 {
	match "system"		"DEVFS";
	match "subsystem"	"CDEV";
	match "type"		"DESTROY";
	match "cdev"		"hv_kvp_dev";
	action "pkill -x hv_kvp_daemon";
};

notify 11 {
	match "system"		"DEVFS";
	match "subsystem"	"CDEV";
	match "type"		"CREATE";
	match "cdev"		"hv_fsvss_dev";
	action "/usr/sbin/hv_vss_daemon";
};

notify 11 {
	match "system"		"DEVFS";
	match "subsystem"	"CDEV";
	match "type"		"DESTROY";
	match "cdev"		"hv_fsvss_dev";
	action "pkill -x hv_vss_daemon";
};

#
# Default workflow for VF bringup:
# 1) ETHERNET/IFATTACH -> VF interface up (delayed by rc.conf hyperv_vf_delay
#    seconds).  This operation will trigger HYPERV_NIC_VF/VF_UP.
# 2) HYPERV_NIC_VF/VF_UP:
#    a) Create laggX coresponding to hnX.
#    b) Add hnX and VF to laggX.
#    c) Whack all previous network configuration on hnX, including stopping
#       dhclient.
#    d) Apply rc.conf ifconfig_hnX to laggX; i.e. including starting dhclient.
#
# NOTE:
# HYPERV_NIC_VF/VF_UP action script could be customized per-interface by
# adding /usr/libexec/hyperv/hyperv_vfup.hnX script.
# /usr/libexec/hyperv/hyperv_vfup could be used as the template for the
# customized per-interface script.
#

notify 10 {
	match "system"		"HYPERV_NIC_VF";
	match "type"		"VF_UP";
	action "/usr/libexec/hyperv/hyperv_vfup $subsystem";
};

notify 10 {
	match "system"		"ETHERNET";
	match "type"		"IFATTACH";
	action "/usr/libexec/hyperv/hyperv_vfattach $subsystem 0";
};
